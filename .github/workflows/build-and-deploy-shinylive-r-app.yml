on:
    push:
      branches: [main, master]
    release:
        types: [published]
    workflow_dispatch: {}

name: shinylive-app

jobs:
  publish-shiny-app:
    runs-on: ubuntu-latest
    concurrency:
      group: r-shinylive-website-${{ github.event_name != 'pull_request' || github.run_id }}
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      # Check out the repository
      - name: "Check out repository"
        uses: actions/checkout@v4

      # Set up R
      - name: "Setup R"
        uses: r-lib/actions/setup-r@v2

      # Restore R package cache
      - name: Cache R package library
        id: cache-R
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-R-${{ hashFiles('**/*.lock') }}

      # Install R package dependencies
      - name: "Install R package dependencies"
        run: |
          install.packages('remotes')
          remotes::install_version('shinylive', version = '0.2.0')
        shell: Rscript {0}

      # Save R package library to cache
      - name: Save R package library to cache
        if: steps.cache-R.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-R-${{ hashFiles('**/*.lock') }}

      # Export the shiny app
      - name: Create Shinylive App from working directory files
        shell: Rscript {0}
        run: |
          shinylive::export(".", "_site")

      # Upload Pages artifact
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with: 
          retention-days: 1

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4